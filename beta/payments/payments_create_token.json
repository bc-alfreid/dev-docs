{
  "swagger": "2.0",
  "info": {
    "version": "",
    "title": "Create Payment Token API",
    "contact": {},
    "license": {
      "name": "",
      "url": ""
    },
    "termsOfService": "https://www.bigcommerce.com/terms/api-terms/",
    "description": "This endpoint will create a payment tokent that can be used to process payments. A Payment token is required for stored cards, credit cards and orders where a `payment_access_token` is being used. \n\nWhile the Try it Now does work, please use other methods of testing for security."
  },
  "host": "api.bigcommerce.com",
  "basePath": "/stores/{store_hash}/v3",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/payments/access_tokens": {
      "post": {
        "description": "This endpoint provides the capability to create a payment access token. The payment access token is required when making request to Payment API for submitting payment for an order.\n\nAfter the token is created then use the token to [submit a payment](/process-payment/payment/paymentspost).\n\n* The order id is required ",
        "summary": "Creates a payment access token",
        "tags": [
          "Payment Access Token"
        ],
        "operationId": "PaymentsAccessTokensPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentAccessTokenRequest"
            },
            "x-examples": {
              "application/json": {
                "order": {
                  "id": 44796008,
                  "is_recurring": true,
                  "shopper_session": {
                    "ip_address": "culpa exercitation"
                  }
                }
              },
              "Example": {
                "order": {
                  "id": 182
                }
              }
            }
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "201": {
            "description": "Payment access token has been successfully created",
            "schema": {
              "$ref": "#/definitions/PaymentsAccessTokensResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "ad anim"
                }
              }
            }
          },
          "400": {
            "description": "Request has been rejected",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Valid authentication required",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Request has been rejected due to resource not being found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Request has been rejected due to missing or invalid data",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PaymentAccessTokenRequest": {
      "title": "Payment Access Token Request",
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/Order"
        }
      },
      "required": [
        "order"
      ]
    },
    "Order": {
      "title": "Order",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier for the order",
          "type": "integer",
          "minimum": 1,
          "format": "int32"
        },
        "is_recurring": {
          "description": "Whether this is a recurring order. If the order is recurring this field should be set to true in order to let the payment gateway know. ",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "shopper_session": {
          "$ref": "#/definitions/ShopperSession"
        }
      },
      "required": [
        "id"
      ]
    },
    "ShopperSession": {
      "title": "Shopper Session",
      "type": "object",
      "properties": {
        "ip_address": {
          "description": "IP address where this shopper made the purchase. It is currently stored in BigCommerce and not sent to the payment gateway. Optional field. ",
          "type": "string"
        }
      }
    },
    "PaymentsAccessTokensResponse": {
      "title": "Payments Access Tokens Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/PaymentAccessToken"
        }
      }
    },
    "PaymentAccessToken": {
      "title": "Payment Access Token",
      "type": "object",
      "properties": {
        "id": {
          "description": "Payment access token. This token is required in subsequent payment request to Payment API endpoint.",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "id"
      ]
    },
    "ErrorResponse": {
      "title": "Error Response",
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "Short summary describing the particular error",
          "type": "string"
        },
        "detail": {
          "description": "Detailed summary describing the particular error",
          "type": "string"
        },
        "type": {
          "description": "Reference that identifies the particular error",
          "type": "string"
        },
        "code": {
          "description": "Code representing the particular error",
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "status",
        "title",
        "type"
      ]
    },
    "StoredCard": {
      "title": "Stored Card",
      "type": "object",
      "properties": {
        "brand": {
          "description": "Brand of this card such as VISA or Mastercard",
          "type": "string",
          "minLength": 1
        },
        "expiry_month": {
          "description": "Expiry month of this card",
          "type": "integer",
          "minimum": 1,
          "maximum": 12,
          "format": "int32"
        },
        "expiry_year": {
          "description": "Expiry year of this card",
          "type": "integer",
          "format": "int32"
        },
        "iin": {
          "description": "Issuer identification number of this card. This is extracted from the card when the order is payed for.",
          "type": "string",
          "minLength": 6,
          "maxLength": 6
        },
        "last_4": {
          "description": "Last four numbers of this card",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        },
        "token": {
          "description": "Identifier representing this stored card. This is used to identify cards within BigCommerce. It is the same as the `payment_access_token` that returns via the [Get Transactions endpoint](https://developer.bigcommerce.com/api/v3/#/reference/orders).",
          "type": "string",
          "minLength": 64,
          "maxLength": 64
        }
      },
      "required": [
        "brand",
        "expiry_month",
        "expiry_year",
        "iin",
        "last_4",
        "token"
      ]
    },
    "Error": {
      "title": "Error",
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "Short summary describing the particular error",
          "type": "string"
        },
        "detail": {
          "description": "Detailed summary describing the particular error",
          "type": "string"
        },
        "type": {
          "description": "Reference that identifies the particular error",
          "type": "string"
        },
        "code": {
          "description": "Code representing the particular error",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "status",
        "title",
        "type"
      ]
    }
  },
  "tags": [
    {
      "name": "New Tag"
    },
    {
      "name": "Payment Access Token",
      "description": ""
    },
    {
      "name": "Payment Methods",
      "description": ""
    }
  ],
  "securityDefinitions": {
    "X-Auth-Client": {
      "type": "apiKey",
      "in": "header",
      "name": "X-Auth-Client"
    },
    "X-Auth-Token": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "X-Auth-Client": []
    },
    {
      "X-Auth-Token": []
    }
  ],
  "parameters": {
    "Accept": {
      "name": "Accept",
      "in": "header",
      "type": "string",
      "default": "application/json"
    },
    "Content-Type": {
      "in": "header",
      "type": "string",
      "name": "Content-Type",
      "default": "application/json"
    }
  }
}
